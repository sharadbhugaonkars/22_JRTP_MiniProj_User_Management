package com.example.demo.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.entity.User;
import com.example.demo.exception.UserEmailNotFoundException;
import com.example.demo.repo.UserRepository;
import com.example.demo.service.IUserService;

@RestController
public class UserRestController {
	
	@Autowired
	private IUserService service;
	
	@Autowired
	private UserRepository userRepository;
	
	@PostMapping("/signin")
    public ResponseEntity<String> authenticateUser(@RequestBody User user){
		
		// add check for email exists in DB
        if(userRepository.existsByEmail(user.getEmail())){
            return new ResponseEntity<>("Email Already Taken ...Take Another..", HttpStatus.BAD_REQUEST);
        }
        else if(!userRepository.existsByEmail(user.getEmail())){
        	userRepository.save(user);
        	
        	return new ResponseEntity<>("WelCome To AshokIT !!", HttpStatus.OK);
        	
        }
        else {
        String	s1="User Not Found";
        String 	s2=service.UserByEmailAndPassword(user);
        String	s3=s1+s2;
       
             return new ResponseEntity<>(s3, HttpStatus.OK);
    }
	}
	
	@PostMapping("/signup")
	public ResponseEntity<String> registerUser(@RequestBody User user1){
		
		// add check for email & password  exists in DB
      User user=userRepository.findByEmailAndPassword(user1.getEmail(),user1.getPassword())
        		.orElseThrow(() ->
                new UserEmailNotFoundException("User not found with  email:"+user1.getEmail()));
        
        if(userRepository.existsByEmail(user.getEmail()) && userRepository.existsByPassword(user.getPassword())) {
        	
            return new ResponseEntity<>("WelCome To Registration Form", HttpStatus.OK);
        }else {
        	
        	return new ResponseEntity<>("User not found with  email:", HttpStatus.BAD_REQUEST);
        }
        	
        }
	
		}

